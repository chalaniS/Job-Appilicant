{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\",\"filename\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.17:development":{"value":{"code":"const mongoose = require(\"mongoose\");\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst shortid = require(\"shortid\"); // Import shortid for generating unique reference numbers\n\nconst app = express();\napp.use(cors());\napp.use(express.json());\n\n// Connect to MongoDB\nmongoose.connect(\"mongodb+srv://gymly:gymly123@gymly-db-cluster.sfmuyh9.mongodb.net/Applicant-db?retryWrites=true&w=majority\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => {\n  console.log(\"Connected to MongoDB\");\n}).catch(err => {\n  console.error(\"Error connecting to MongoDB: \", err);\n});\n\n// Define the ApplicantModel (replace with your actual model)\nconst ApplicantModel = require(\"./src/Models/ApplicantModel\");\n\n// Connect with frontend\napp.get(\"/getData\", (req, res) => {\n  res.send(\"Hello, I'm from the backend\");\n});\n\n// Route to create a new applicant\napp.post('/applicants', async (req, res) => {\n  try {\n    // Extract individual fields from the request body\n    const {\n      name,\n      address,\n      nic,\n      emailAddress,\n      date,\n      applicantDetails,\n      position,\n      Diploma,\n      cv\n    } = req.body;\n\n    // Create a new instance of the Applicant model with the extracted data\n    const applicant = new Applicant({\n      name,\n      address,\n      nic,\n      emailAddress,\n      date,\n      applicantDetails,\n      position,\n      Diploma,\n      cv\n    });\n\n    // Save the applicant to the database\n    await applicant.save();\n\n    // Respond with a 201 status code and the saved applicant data\n    res.status(201).json(applicant);\n  } catch (err) {\n    // Handle any errors that occur during the process\n    console.error(err);\n    res.status(500).send('Error creating applicant');\n  }\n});\n\n// Get all applicants\napp.get(\"/applicants\", async (req, res) => {\n  try {\n    const applicants = await ApplicantModel.find();\n    res.status(200).json(applicants);\n  } catch (err) {\n    console.error(err);\n    res.status(500).send(\"Error retrieving applicants\");\n  }\n});\n\n// Get an applicant by ID\napp.get(\"/applicants/:id\", async (req, res) => {\n  const applicantId = req.params.id;\n  try {\n    const applicant = await ApplicantModel.findById(applicantId);\n    if (!applicant) {\n      return res.status(404).send(\"Applicant not found\");\n    }\n    res.status(200).json(applicant);\n  } catch (err) {\n    console.error(err);\n    res.status(500).send(\"Error retrieving applicant\");\n  }\n});\n\n// Update an applicant by ID\napp.put(\"/applicants/:id\", async (req, res) => {\n  const applicantId = req.params.id;\n  try {\n    const updatedApplicant = await ApplicantModel.findByIdAndUpdate(applicantId, req.body, {\n      new: true\n    });\n    if (!updatedApplicant) {\n      return res.status(404).send(\"Applicant not found\");\n    }\n    res.status(200).json(updatedApplicant);\n  } catch (err) {\n    console.error(err);\n    res.status(500).send(\"Error updating applicant\");\n  }\n});\n\n// Delete an applicant by ID\napp.delete(\"/applicants/:id\", async (req, res) => {\n  const applicantId = req.params.id;\n  try {\n    const deletedApplicant = await ApplicantModel.findByIdAndDelete(applicantId);\n    if (!deletedApplicant) {\n      return res.status(404).send(\"Applicant not found\");\n    }\n    res.status(200).send(\"Applicant deleted successfully\");\n  } catch (err) {\n    console.error(err);\n    res.status(500).send(\"Error deleting applicant\");\n  }\n});\n\n// Start the server\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => {\n  console.log(`Server started on port ${PORT}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["mongoose","require","express","cors","shortid","app","use","json","connect","useNewUrlParser","useUnifiedTopology","then","console","log","catch","err","error","ApplicantModel","get","req","res","send","post","name","address","nic","emailAddress","date","applicantDetails","position","Diploma","cv","body","applicant","Applicant","save","status","applicants","find","applicantId","params","id","findById","put","updatedApplicant","findByIdAndUpdate","new","delete","deletedApplicant","findByIdAndDelete","PORT","process","env","listen"],"sourceRoot":"C:\\Project react\\enterpricePro\\Backend\\","sources":["index.js"],"sourcesContent":["const mongoose = require(\"mongoose\");\r\nconst express = require(\"express\");\r\nconst cors = require(\"cors\");\r\nconst shortid = require(\"shortid\"); // Import shortid for generating unique reference numbers\r\n\r\nconst app = express();\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\n// Connect to MongoDB\r\nmongoose\r\n    .connect(\"mongodb+srv://gymly:gymly123@gymly-db-cluster.sfmuyh9.mongodb.net/Applicant-db?retryWrites=true&w=majority\", {\r\n        useNewUrlParser: true,\r\n        useUnifiedTopology: true,\r\n    })\r\n    .then(() => {\r\n        console.log(\"Connected to MongoDB\");\r\n    })\r\n    .catch((err) => {\r\n        console.error(\"Error connecting to MongoDB: \", err);\r\n    });\r\n\r\n// Define the ApplicantModel (replace with your actual model)\r\nconst ApplicantModel = require(\"./src/Models/ApplicantModel\");\r\n\r\n// Connect with frontend\r\napp.get(\"/getData\", (req, res) => {\r\n    res.send(\"Hello, I'm from the backend\");\r\n});\r\n\r\n// Route to create a new applicant\r\napp.post('/applicants', async (req, res) => {\r\n    try {\r\n        // Extract individual fields from the request body\r\n        const {\r\n            name,\r\n            address,\r\n            nic,\r\n            emailAddress,\r\n            date,\r\n            applicantDetails,\r\n            position,\r\n            Diploma,\r\n            cv,\r\n        } = req.body;\r\n\r\n        // Create a new instance of the Applicant model with the extracted data\r\n        const applicant = new Applicant({\r\n            name,\r\n            address,\r\n            nic,\r\n            emailAddress,\r\n            date,\r\n            applicantDetails,\r\n            position,\r\n            Diploma,\r\n            cv,\r\n        });\r\n\r\n        // Save the applicant to the database\r\n        await applicant.save();\r\n\r\n        // Respond with a 201 status code and the saved applicant data\r\n        res.status(201).json(applicant);\r\n    } catch (err) {\r\n        // Handle any errors that occur during the process\r\n        console.error(err);\r\n        res.status(500).send('Error creating applicant');\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n// Get all applicants\r\napp.get(\"/applicants\", async (req, res) => {\r\n    try {\r\n        const applicants = await ApplicantModel.find();\r\n        res.status(200).json(applicants);\r\n    } catch (err) {\r\n        console.error(err);\r\n        res.status(500).send(\"Error retrieving applicants\");\r\n    }\r\n});\r\n\r\n// Get an applicant by ID\r\napp.get(\"/applicants/:id\", async (req, res) => {\r\n    const applicantId = req.params.id;\r\n    try {\r\n        const applicant = await ApplicantModel.findById(applicantId);\r\n        if (!applicant) {\r\n            return res.status(404).send(\"Applicant not found\");\r\n        }\r\n        res.status(200).json(applicant);\r\n    } catch (err) {\r\n        console.error(err);\r\n        res.status(500).send(\"Error retrieving applicant\");\r\n    }\r\n});\r\n\r\n// Update an applicant by ID\r\napp.put(\"/applicants/:id\", async (req, res) => {\r\n    const applicantId = req.params.id;\r\n    try {\r\n        const updatedApplicant = await ApplicantModel.findByIdAndUpdate(\r\n            applicantId,\r\n            req.body,\r\n            { new: true }\r\n        );\r\n        if (!updatedApplicant) {\r\n            return res.status(404).send(\"Applicant not found\");\r\n        }\r\n        res.status(200).json(updatedApplicant);\r\n    } catch (err) {\r\n        console.error(err);\r\n        res.status(500).send(\"Error updating applicant\");\r\n    }\r\n});\r\n\r\n// Delete an applicant by ID\r\napp.delete(\"/applicants/:id\", async (req, res) => {\r\n    const applicantId = req.params.id;\r\n    try {\r\n        const deletedApplicant = await ApplicantModel.findByIdAndDelete(applicantId);\r\n        if (!deletedApplicant) {\r\n            return res.status(404).send(\"Applicant not found\");\r\n        }\r\n        res.status(200).send(\"Applicant deleted successfully\");\r\n    } catch (err) {\r\n        console.error(err);\r\n        res.status(500).send(\"Error deleting applicant\");\r\n    }\r\n});\r\n\r\n// Start the server\r\nconst PORT = process.env.PORT || 5000;\r\napp.listen(PORT, () => {\r\n    console.log(`Server started on port ${PORT}`);\r\n});\r\n"],"mappings":"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"}},"mtime":1694706313703},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\\\\src\\\\Models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\",\"filename\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\\\\src\\\\Models\\\\Applicants.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.17:development":{"value":{"code":"const mongoose = require('mongoose');\n\n// Define the schema for the job applicant\nconst applicantSchema = new mongoose.Schema({\n  referenceNumber: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  nic: {\n    type: String,\n    required: true\n  },\n  emailAddress: {\n    type: String,\n    required: true\n  },\n  date: {\n    type: Date,\n    required: true\n  },\n  applicantDetails: {\n    highSchoolName: {\n      type: String,\n      required: true\n    },\n    city: {\n      type: String,\n      required: true\n    },\n    fromDate: {\n      type: Date,\n      required: true\n    },\n    toDate: {\n      type: Date,\n      required: true\n    },\n    graduate: {\n      type: Boolean,\n      required: true\n    }\n  },\n  position: {\n    type: String,\n    required: true\n  }\n});\n\n// Create a model for the job applicant using the schema\nconst ApplicantModel = mongoose.model('Applicant', applicantSchema);\nmodule.exports = ApplicantModel;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJhcHBsaWNhbnRTY2hlbWEiLCJTY2hlbWEiLCJyZWZlcmVuY2VOdW1iZXIiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ1bmlxdWUiLCJuYW1lIiwibmljIiwiZW1haWxBZGRyZXNzIiwiZGF0ZSIsIkRhdGUiLCJhcHBsaWNhbnREZXRhaWxzIiwiaGlnaFNjaG9vbE5hbWUiLCJjaXR5IiwiZnJvbURhdGUiLCJ0b0RhdGUiLCJncmFkdWF0ZSIsIkJvb2xlYW4iLCJwb3NpdGlvbiIsIkFwcGxpY2FudE1vZGVsIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcUHJvamVjdCByZWFjdFxcZW50ZXJwcmljZVByb1xcQmFja2VuZFxcc3JjXFxNb2RlbHNcXCIsInNvdXJjZXMiOlsiQXBwbGljYW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcblxyXG4vLyBEZWZpbmUgdGhlIHNjaGVtYSBmb3IgdGhlIGpvYiBhcHBsaWNhbnRcclxuY29uc3QgYXBwbGljYW50U2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICByZWZlcmVuY2VOdW1iZXI6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgdW5pcXVlOiB0cnVlXHJcbiAgICB9LFxyXG4gICAgbmFtZToge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgfSxcclxuICAgIG5pYzoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgfSxcclxuICAgIGVtYWlsQWRkcmVzczoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgfSxcclxuICAgIGRhdGU6IHtcclxuICAgICAgICB0eXBlOiBEYXRlLFxyXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICB9LFxyXG4gICAgYXBwbGljYW50RGV0YWlsczoge1xyXG4gICAgICAgIGhpZ2hTY2hvb2xOYW1lOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNpdHk6IHtcclxuICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZnJvbURhdGU6IHtcclxuICAgICAgICAgICAgdHlwZTogRGF0ZSxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIHRvRGF0ZToge1xyXG4gICAgICAgICAgICB0eXBlOiBEYXRlLFxyXG4gICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ3JhZHVhdGU6IHtcclxuICAgICAgICAgICAgdHlwZTogQm9vbGVhbixcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgcG9zaXRpb246IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgIH1cclxufSk7XHJcblxyXG4vLyBDcmVhdGUgYSBtb2RlbCBmb3IgdGhlIGpvYiBhcHBsaWNhbnQgdXNpbmcgdGhlIHNjaGVtYVxyXG5jb25zdCBBcHBsaWNhbnRNb2RlbCA9IG1vbmdvb3NlLm1vZGVsKCdBcHBsaWNhbnQnLCBhcHBsaWNhbnRTY2hlbWEpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBBcHBsaWNhbnRNb2RlbDtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFVLENBQUM7O0FBRXBDO0FBQ0EsTUFBTUMsZUFBZSxHQUFHLElBQUlGLFFBQVEsQ0FBQ0csTUFBTSxDQUFDO0VBQ3hDQyxlQUFlLEVBQUU7SUFDYkMsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRSxJQUFJO0lBQ2RDLE1BQU0sRUFBRTtFQUNaLENBQUM7RUFDREMsSUFBSSxFQUFFO0lBQ0ZKLElBQUksRUFBRUMsTUFBTTtJQUNaQyxRQUFRLEVBQUU7RUFDZCxDQUFDO0VBQ0RHLEdBQUcsRUFBRTtJQUNETCxJQUFJLEVBQUVDLE1BQU07SUFDWkMsUUFBUSxFQUFFO0VBQ2QsQ0FBQztFQUNESSxZQUFZLEVBQUU7SUFDVk4sSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRTtFQUNkLENBQUM7RUFDREssSUFBSSxFQUFFO0lBQ0ZQLElBQUksRUFBRVEsSUFBSTtJQUNWTixRQUFRLEVBQUU7RUFDZCxDQUFDO0VBQ0RPLGdCQUFnQixFQUFFO0lBQ2RDLGNBQWMsRUFBRTtNQUNaVixJQUFJLEVBQUVDLE1BQU07TUFDWkMsUUFBUSxFQUFFO0lBQ2QsQ0FBQztJQUNEUyxJQUFJLEVBQUU7TUFDRlgsSUFBSSxFQUFFQyxNQUFNO01BQ1pDLFFBQVEsRUFBRTtJQUNkLENBQUM7SUFDRFUsUUFBUSxFQUFFO01BQ05aLElBQUksRUFBRVEsSUFBSTtNQUNWTixRQUFRLEVBQUU7SUFDZCxDQUFDO0lBQ0RXLE1BQU0sRUFBRTtNQUNKYixJQUFJLEVBQUVRLElBQUk7TUFDVk4sUUFBUSxFQUFFO0lBQ2QsQ0FBQztJQUNEWSxRQUFRLEVBQUU7TUFDTmQsSUFBSSxFQUFFZSxPQUFPO01BQ2JiLFFBQVEsRUFBRTtJQUNkO0VBQ0osQ0FBQztFQUNEYyxRQUFRLEVBQUU7SUFDTmhCLElBQUksRUFBRUMsTUFBTTtJQUNaQyxRQUFRLEVBQUU7RUFDZDtBQUNKLENBQUMsQ0FBQzs7QUFFRjtBQUNBLE1BQU1lLGNBQWMsR0FBR3RCLFFBQVEsQ0FBQ3VCLEtBQUssQ0FBQyxXQUFXLEVBQUVyQixlQUFlLENBQUM7QUFFbkVzQixNQUFNLENBQUNDLE9BQU8sR0FBR0gsY0FBYyJ9","map":{"version":3,"names":["mongoose","require","applicantSchema","Schema","referenceNumber","type","String","required","unique","name","nic","emailAddress","date","Date","applicantDetails","highSchoolName","city","fromDate","toDate","graduate","Boolean","position","ApplicantModel","model","module","exports"],"sourceRoot":"C:\\Project react\\enterpricePro\\Backend\\src\\Models\\","sources":["Applicants.js"],"sourcesContent":["const mongoose = require('mongoose');\r\n\r\n// Define the schema for the job applicant\r\nconst applicantSchema = new mongoose.Schema({\r\n    referenceNumber: {\r\n        type: String,\r\n        required: true,\r\n        unique: true\r\n    },\r\n    name: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    nic: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    emailAddress: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    date: {\r\n        type: Date,\r\n        required: true\r\n    },\r\n    applicantDetails: {\r\n        highSchoolName: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        city: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        fromDate: {\r\n            type: Date,\r\n            required: true\r\n        },\r\n        toDate: {\r\n            type: Date,\r\n            required: true\r\n        },\r\n        graduate: {\r\n            type: Boolean,\r\n            required: true\r\n        }\r\n    },\r\n    position: {\r\n        type: String,\r\n        required: true\r\n    }\r\n});\r\n\r\n// Create a model for the job applicant using the schema\r\nconst ApplicantModel = mongoose.model('Applicant', applicantSchema);\r\n\r\nmodule.exports = ApplicantModel;\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;;AAEpC;AACA,MAAMC,eAAe,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACxCC,eAAe,EAAE;IACbC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE;EACZ,CAAC;EACDC,IAAI,EAAE;IACFJ,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACd,CAAC;EACDG,GAAG,EAAE;IACDL,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACd,CAAC;EACDI,YAAY,EAAE;IACVN,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACd,CAAC;EACDK,IAAI,EAAE;IACFP,IAAI,EAAEQ,IAAI;IACVN,QAAQ,EAAE;EACd,CAAC;EACDO,gBAAgB,EAAE;IACdC,cAAc,EAAE;MACZV,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd,CAAC;IACDS,IAAI,EAAE;MACFX,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd,CAAC;IACDU,QAAQ,EAAE;MACNZ,IAAI,EAAEQ,IAAI;MACVN,QAAQ,EAAE;IACd,CAAC;IACDW,MAAM,EAAE;MACJb,IAAI,EAAEQ,IAAI;MACVN,QAAQ,EAAE;IACd,CAAC;IACDY,QAAQ,EAAE;MACNd,IAAI,EAAEe,OAAO;MACbb,QAAQ,EAAE;IACd;EACJ,CAAC;EACDc,QAAQ,EAAE;IACNhB,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMe,cAAc,GAAGtB,QAAQ,CAACuB,KAAK,CAAC,WAAW,EAAErB,eAAe,CAAC;AAEnEsB,MAAM,CAACC,OAAO,GAAGH,cAAc"}},"mtime":1694678060956},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\\\\src\\\\Models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\",\"filename\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\\\\src\\\\Models\\\\ApplicantModel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.17:development":{"value":{"code":"const mongoose = require('mongoose');\n\n// Define the schema for the applicant\nconst applicantSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  address: {\n    type: String,\n    required: true\n  },\n  nic: {\n    type: String,\n    required: true\n  },\n  emailAddress: {\n    type: String,\n    required: true\n  },\n  date: {\n    type: Date,\n    required: true\n  },\n  applicantDetails: {\n    highSchoolName: String,\n    city: String,\n    fromDate: Date,\n    toDate: Date,\n    graduate: Boolean,\n    graduateExplanation: String,\n    authorized: Boolean,\n    convicted: Boolean\n  },\n  position: String,\n  Diploma: String,\n  cv: {\n    type: String // You can use String to store the file path or other information about the uploaded CV\n  }\n});\n\n// Create the Applicant model\nconst Applicant = mongoose.model('Applicant', applicantSchema);\nmodule.exports = Applicant;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJhcHBsaWNhbnRTY2hlbWEiLCJTY2hlbWEiLCJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwiYWRkcmVzcyIsIm5pYyIsImVtYWlsQWRkcmVzcyIsImRhdGUiLCJEYXRlIiwiYXBwbGljYW50RGV0YWlscyIsImhpZ2hTY2hvb2xOYW1lIiwiY2l0eSIsImZyb21EYXRlIiwidG9EYXRlIiwiZ3JhZHVhdGUiLCJCb29sZWFuIiwiZ3JhZHVhdGVFeHBsYW5hdGlvbiIsImF1dGhvcml6ZWQiLCJjb252aWN0ZWQiLCJwb3NpdGlvbiIsIkRpcGxvbWEiLCJjdiIsIkFwcGxpY2FudCIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiQzpcXFByb2plY3QgcmVhY3RcXGVudGVycHJpY2VQcm9cXEJhY2tlbmRcXHNyY1xcTW9kZWxzXFwiLCJzb3VyY2VzIjpbIkFwcGxpY2FudE1vZGVsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuXHJcbi8vIERlZmluZSB0aGUgc2NoZW1hIGZvciB0aGUgYXBwbGljYW50XHJcbmNvbnN0IGFwcGxpY2FudFNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xyXG4gICAgbmFtZToge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgIH0sXHJcbiAgICBhZGRyZXNzOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgfSxcclxuICAgIG5pYzoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgIH0sXHJcbiAgICBlbWFpbEFkZHJlc3M6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICB9LFxyXG4gICAgZGF0ZToge1xyXG4gICAgICAgIHR5cGU6IERhdGUsXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICB9LFxyXG4gICAgYXBwbGljYW50RGV0YWlsczoge1xyXG4gICAgICAgIGhpZ2hTY2hvb2xOYW1lOiBTdHJpbmcsXHJcbiAgICAgICAgY2l0eTogU3RyaW5nLFxyXG4gICAgICAgIGZyb21EYXRlOiBEYXRlLFxyXG4gICAgICAgIHRvRGF0ZTogRGF0ZSxcclxuICAgICAgICBncmFkdWF0ZTogQm9vbGVhbixcclxuICAgICAgICBncmFkdWF0ZUV4cGxhbmF0aW9uOiBTdHJpbmcsXHJcbiAgICAgICAgYXV0aG9yaXplZDogQm9vbGVhbixcclxuICAgICAgICBjb252aWN0ZWQ6IEJvb2xlYW4sXHJcbiAgICB9LFxyXG4gICAgcG9zaXRpb246IFN0cmluZyxcclxuICAgIERpcGxvbWE6IFN0cmluZyxcclxuICAgIGN2OiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLCAvLyBZb3UgY2FuIHVzZSBTdHJpbmcgdG8gc3RvcmUgdGhlIGZpbGUgcGF0aCBvciBvdGhlciBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdXBsb2FkZWQgQ1ZcclxuICAgIH0sXHJcbn0pO1xyXG5cclxuLy8gQ3JlYXRlIHRoZSBBcHBsaWNhbnQgbW9kZWxcclxuY29uc3QgQXBwbGljYW50ID0gbW9uZ29vc2UubW9kZWwoJ0FwcGxpY2FudCcsIGFwcGxpY2FudFNjaGVtYSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEFwcGxpY2FudDtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFVLENBQUM7O0FBRXBDO0FBQ0EsTUFBTUMsZUFBZSxHQUFHLElBQUlGLFFBQVEsQ0FBQ0csTUFBTSxDQUFDO0VBQ3hDQyxJQUFJLEVBQUU7SUFDRkMsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRTtFQUNkLENBQUM7RUFDREMsT0FBTyxFQUFFO0lBQ0xILElBQUksRUFBRUMsTUFBTTtJQUNaQyxRQUFRLEVBQUU7RUFDZCxDQUFDO0VBQ0RFLEdBQUcsRUFBRTtJQUNESixJQUFJLEVBQUVDLE1BQU07SUFDWkMsUUFBUSxFQUFFO0VBQ2QsQ0FBQztFQUNERyxZQUFZLEVBQUU7SUFDVkwsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRTtFQUNkLENBQUM7RUFDREksSUFBSSxFQUFFO0lBQ0ZOLElBQUksRUFBRU8sSUFBSTtJQUNWTCxRQUFRLEVBQUU7RUFDZCxDQUFDO0VBQ0RNLGdCQUFnQixFQUFFO0lBQ2RDLGNBQWMsRUFBRVIsTUFBTTtJQUN0QlMsSUFBSSxFQUFFVCxNQUFNO0lBQ1pVLFFBQVEsRUFBRUosSUFBSTtJQUNkSyxNQUFNLEVBQUVMLElBQUk7SUFDWk0sUUFBUSxFQUFFQyxPQUFPO0lBQ2pCQyxtQkFBbUIsRUFBRWQsTUFBTTtJQUMzQmUsVUFBVSxFQUFFRixPQUFPO0lBQ25CRyxTQUFTLEVBQUVIO0VBQ2YsQ0FBQztFQUNESSxRQUFRLEVBQUVqQixNQUFNO0VBQ2hCa0IsT0FBTyxFQUFFbEIsTUFBTTtFQUNmbUIsRUFBRSxFQUFFO0lBQ0FwQixJQUFJLEVBQUVDLE1BQU0sQ0FBRTtFQUNsQjtBQUNKLENBQUMsQ0FBQzs7QUFFRjtBQUNBLE1BQU1vQixTQUFTLEdBQUcxQixRQUFRLENBQUMyQixLQUFLLENBQUMsV0FBVyxFQUFFekIsZUFBZSxDQUFDO0FBRTlEMEIsTUFBTSxDQUFDQyxPQUFPLEdBQUdILFNBQVMifQ==","map":{"version":3,"names":["mongoose","require","applicantSchema","Schema","name","type","String","required","address","nic","emailAddress","date","Date","applicantDetails","highSchoolName","city","fromDate","toDate","graduate","Boolean","graduateExplanation","authorized","convicted","position","Diploma","cv","Applicant","model","module","exports"],"sourceRoot":"C:\\Project react\\enterpricePro\\Backend\\src\\Models\\","sources":["ApplicantModel.js"],"sourcesContent":["const mongoose = require('mongoose');\r\n\r\n// Define the schema for the applicant\r\nconst applicantSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String,\r\n        required: true,\r\n    },\r\n    address: {\r\n        type: String,\r\n        required: true,\r\n    },\r\n    nic: {\r\n        type: String,\r\n        required: true,\r\n    },\r\n    emailAddress: {\r\n        type: String,\r\n        required: true,\r\n    },\r\n    date: {\r\n        type: Date,\r\n        required: true,\r\n    },\r\n    applicantDetails: {\r\n        highSchoolName: String,\r\n        city: String,\r\n        fromDate: Date,\r\n        toDate: Date,\r\n        graduate: Boolean,\r\n        graduateExplanation: String,\r\n        authorized: Boolean,\r\n        convicted: Boolean,\r\n    },\r\n    position: String,\r\n    Diploma: String,\r\n    cv: {\r\n        type: String, // You can use String to store the file path or other information about the uploaded CV\r\n    },\r\n});\r\n\r\n// Create the Applicant model\r\nconst Applicant = mongoose.model('Applicant', applicantSchema);\r\n\r\nmodule.exports = Applicant;\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;;AAEpC;AACA,MAAMC,eAAe,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACxCC,IAAI,EAAE;IACFC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACd,CAAC;EACDC,OAAO,EAAE;IACLH,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACd,CAAC;EACDE,GAAG,EAAE;IACDJ,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACd,CAAC;EACDG,YAAY,EAAE;IACVL,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACd,CAAC;EACDI,IAAI,EAAE;IACFN,IAAI,EAAEO,IAAI;IACVL,QAAQ,EAAE;EACd,CAAC;EACDM,gBAAgB,EAAE;IACdC,cAAc,EAAER,MAAM;IACtBS,IAAI,EAAET,MAAM;IACZU,QAAQ,EAAEJ,IAAI;IACdK,MAAM,EAAEL,IAAI;IACZM,QAAQ,EAAEC,OAAO;IACjBC,mBAAmB,EAAEd,MAAM;IAC3Be,UAAU,EAAEF,OAAO;IACnBG,SAAS,EAAEH;EACf,CAAC;EACDI,QAAQ,EAAEjB,MAAM;EAChBkB,OAAO,EAAElB,MAAM;EACfmB,EAAE,EAAE;IACApB,IAAI,EAAEC,MAAM,CAAE;EAClB;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMoB,SAAS,GAAG1B,QAAQ,CAAC2B,KAAK,CAAC,WAAW,EAAEzB,eAAe,CAAC;AAE9D0B,MAAM,CAACC,OAAO,GAAGH,SAAS"}},"mtime":1694706222970}}