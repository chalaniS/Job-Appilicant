{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\",\"filename\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.17:development":{"value":{"code":"const mongoose = require(\"mongoose\");\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst shortid = require(\"shortid\"); // Import shortid for generating unique reference numbers\n\nconst app = express();\napp.use(cors());\napp.use(express.json());\n\n// Connect to MongoDB\nmongoose.connect(\"mongodb+srv://gymly:gymly123@gymly-db-cluster.sfmuyh9.mongodb.net/Applicant-db?retryWrites=true&w=majority\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => {\n  console.log(\"Connected to MongoDB\");\n}).catch(err => {\n  console.error(\"Error connecting to MongoDB: \", err);\n});\n\n// Define the ApplicantModel (replace with your actual model)\nconst ApplicantModel = require(\"./src/Models/ApplicantModel\");\n\n// Connect with frontend\napp.get(\"/getData\", (req, res) => {\n  res.send(\"Hello, I'm from the backend\");\n});\n\n// // Create a new applicant\n// app.post(\"/applicants\", async (req, res) => {\n//     try {\n//         // Extract individual fields from the request body\n//         const {\n//             name,\n//             address,\n//             nic,\n//             emailAddress,\n//             date,\n//             applicantDetails,\n//             position,\n//             Diploma,\n//             cv\n//         } = req.body;\n\n//         // Generate a unique reference number\n//         const referenceNumber = shortid.generate();\n\n//         // Create a new instance of ApplicantModel with the extracted data\n//         const applicant = new ApplicantModel({\n//             referenceNumber, // Add the generated reference number\n//             userId: '065695895622622',\n//             name,\n//             address,\n//             nic,\n//             emailAddress,\n//             date,\n//             applicantDetails,\n//             position,\n//             Diploma,\n//             cv\n//         });\n\n//         // Save the applicant to the database\n//         await applicant.save();\n\n//         // Respond with a 201 status code and the saved applicant data\n//         res.status(201).json(applicant);\n//     } catch (err) {\n//         // Handle any errors that occur during the process\n//         console.error(err);\n//         res.status(500).send(\"Error creating applicant\");\n//     }\n// });\n\napp.post(\"/applicants\", async (req, res) => {\n  try {\n    // Check if the 'name' field is provided in the request body\n    // if (!req.body.name) {\n    //     return res.status(400).json({ error: \"Name is required\" });\n    // }\n\n    // Extract individual fields from the request body\n    const {\n      name,\n      address,\n      nic,\n      emailAddress,\n      date,\n      applicantDetails,\n      position,\n      Diploma,\n      cv\n    } = req.body;\n\n    // Create a new instance of ApplicantModel with the extracted data\n    const applicant = new ApplicantModel({\n      userId: '065695895622622',\n      name,\n      address,\n      nic,\n      emailAddress,\n      date,\n      applicantDetails,\n      position,\n      Diploma,\n      cv\n    });\n\n    // Save the applicant to the database\n    await applicant.save();\n\n    // Respond with a 201 status code and the saved applicant data\n    res.status(201).json(applicant);\n  } catch (err) {\n    // Handle any errors that occur during the process\n    console.error(err);\n    res.status(500).send(\"Error creating applicant\");\n  }\n});\n\n// Get all applicants\napp.get(\"/applicants\", async (req, res) => {\n  try {\n    const applicants = await ApplicantModel.find();\n    res.status(200).json(applicants);\n  } catch (err) {\n    console.error(err);\n    res.status(500).send(\"Error retrieving applicants\");\n  }\n});\n\n// Get an applicant by ID\napp.get(\"/applicants/:id\", async (req, res) => {\n  const applicantId = req.params.id;\n  try {\n    const applicant = await ApplicantModel.findById(applicantId);\n    if (!applicant) {\n      return res.status(404).send(\"Applicant not found\");\n    }\n    res.status(200).json(applicant);\n  } catch (err) {\n    console.error(err);\n    res.status(500).send(\"Error retrieving applicant\");\n  }\n});\n\n// Update an applicant by ID\napp.put(\"/applicants/:id\", async (req, res) => {\n  const applicantId = req.params.id;\n  try {\n    const updatedApplicant = await ApplicantModel.findByIdAndUpdate(applicantId, req.body, {\n      new: true\n    });\n    if (!updatedApplicant) {\n      return res.status(404).send(\"Applicant not found\");\n    }\n    res.status(200).json(updatedApplicant);\n  } catch (err) {\n    console.error(err);\n    res.status(500).send(\"Error updating applicant\");\n  }\n});\n\n// Delete an applicant by ID\napp.delete(\"/applicants/:id\", async (req, res) => {\n  const applicantId = req.params.id;\n  try {\n    const deletedApplicant = await ApplicantModel.findByIdAndDelete(applicantId);\n    if (!deletedApplicant) {\n      return res.status(404).send(\"Applicant not found\");\n    }\n    res.status(200).send(\"Applicant deleted successfully\");\n  } catch (err) {\n    console.error(err);\n    res.status(500).send(\"Error deleting applicant\");\n  }\n});\n\n// Start the server\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => {\n  console.log(`Server started on port ${PORT}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["mongoose","require","express","cors","shortid","app","use","json","connect","useNewUrlParser","useUnifiedTopology","then","console","log","catch","err","error","ApplicantModel","get","req","res","send","post","name","address","nic","emailAddress","date","applicantDetails","position","Diploma","cv","body","applicant","userId","save","status","applicants","find","applicantId","params","id","findById","put","updatedApplicant","findByIdAndUpdate","new","delete","deletedApplicant","findByIdAndDelete","PORT","process","env","listen"],"sourceRoot":"C:\\Project react\\enterpricePro\\Backend\\","sources":["index.js"],"sourcesContent":["const mongoose = require(\"mongoose\");\r\nconst express = require(\"express\");\r\nconst cors = require(\"cors\");\r\nconst shortid = require(\"shortid\"); // Import shortid for generating unique reference numbers\r\n\r\nconst app = express();\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\n// Connect to MongoDB\r\nmongoose\r\n    .connect(\"mongodb+srv://gymly:gymly123@gymly-db-cluster.sfmuyh9.mongodb.net/Applicant-db?retryWrites=true&w=majority\", {\r\n        useNewUrlParser: true,\r\n        useUnifiedTopology: true,\r\n    })\r\n    .then(() => {\r\n        console.log(\"Connected to MongoDB\");\r\n    })\r\n    .catch((err) => {\r\n        console.error(\"Error connecting to MongoDB: \", err);\r\n    });\r\n\r\n// Define the ApplicantModel (replace with your actual model)\r\nconst ApplicantModel = require(\"./src/Models/ApplicantModel\");\r\n\r\n// Connect with frontend\r\napp.get(\"/getData\", (req, res) => {\r\n    res.send(\"Hello, I'm from the backend\");\r\n});\r\n\r\n// // Create a new applicant\r\n// app.post(\"/applicants\", async (req, res) => {\r\n//     try {\r\n//         // Extract individual fields from the request body\r\n//         const {\r\n//             name,\r\n//             address,\r\n//             nic,\r\n//             emailAddress,\r\n//             date,\r\n//             applicantDetails,\r\n//             position,\r\n//             Diploma,\r\n//             cv\r\n//         } = req.body;\r\n\r\n//         // Generate a unique reference number\r\n//         const referenceNumber = shortid.generate();\r\n\r\n//         // Create a new instance of ApplicantModel with the extracted data\r\n//         const applicant = new ApplicantModel({\r\n//             referenceNumber, // Add the generated reference number\r\n//             userId: '065695895622622',\r\n//             name,\r\n//             address,\r\n//             nic,\r\n//             emailAddress,\r\n//             date,\r\n//             applicantDetails,\r\n//             position,\r\n//             Diploma,\r\n//             cv\r\n//         });\r\n\r\n//         // Save the applicant to the database\r\n//         await applicant.save();\r\n\r\n//         // Respond with a 201 status code and the saved applicant data\r\n//         res.status(201).json(applicant);\r\n//     } catch (err) {\r\n//         // Handle any errors that occur during the process\r\n//         console.error(err);\r\n//         res.status(500).send(\"Error creating applicant\");\r\n//     }\r\n// });\r\n\r\napp.post(\"/applicants\", async (req, res) => {\r\n    try {\r\n        // Check if the 'name' field is provided in the request body\r\n        // if (!req.body.name) {\r\n        //     return res.status(400).json({ error: \"Name is required\" });\r\n        // }\r\n\r\n        // Extract individual fields from the request body\r\n        const {\r\n            name,\r\n            address,\r\n            nic,\r\n            emailAddress,\r\n            date,\r\n            applicantDetails,\r\n            position,\r\n            Diploma,\r\n            cv\r\n        } = req.body;\r\n\r\n        // Create a new instance of ApplicantModel with the extracted data\r\n        const applicant = new ApplicantModel({\r\n\r\n            userId: '065695895622622',\r\n            name,\r\n            address,\r\n            nic,\r\n            emailAddress,\r\n            date,\r\n            applicantDetails,\r\n            position,\r\n            Diploma,\r\n            cv\r\n        });\r\n\r\n        // Save the applicant to the database\r\n        await applicant.save();\r\n\r\n        // Respond with a 201 status code and the saved applicant data\r\n        res.status(201).json(applicant);\r\n    } catch (err) {\r\n        // Handle any errors that occur during the process\r\n        console.error(err);\r\n        res.status(500).send(\"Error creating applicant\");\r\n    }\r\n});\r\n\r\n\r\n// Get all applicants\r\napp.get(\"/applicants\", async (req, res) => {\r\n    try {\r\n        const applicants = await ApplicantModel.find();\r\n        res.status(200).json(applicants);\r\n    } catch (err) {\r\n        console.error(err);\r\n        res.status(500).send(\"Error retrieving applicants\");\r\n    }\r\n});\r\n\r\n// Get an applicant by ID\r\napp.get(\"/applicants/:id\", async (req, res) => {\r\n    const applicantId = req.params.id;\r\n    try {\r\n        const applicant = await ApplicantModel.findById(applicantId);\r\n        if (!applicant) {\r\n            return res.status(404).send(\"Applicant not found\");\r\n        }\r\n        res.status(200).json(applicant);\r\n    } catch (err) {\r\n        console.error(err);\r\n        res.status(500).send(\"Error retrieving applicant\");\r\n    }\r\n});\r\n\r\n// Update an applicant by ID\r\napp.put(\"/applicants/:id\", async (req, res) => {\r\n    const applicantId = req.params.id;\r\n    try {\r\n        const updatedApplicant = await ApplicantModel.findByIdAndUpdate(\r\n            applicantId,\r\n            req.body,\r\n            { new: true }\r\n        );\r\n        if (!updatedApplicant) {\r\n            return res.status(404).send(\"Applicant not found\");\r\n        }\r\n        res.status(200).json(updatedApplicant);\r\n    } catch (err) {\r\n        console.error(err);\r\n        res.status(500).send(\"Error updating applicant\");\r\n    }\r\n});\r\n\r\n// Delete an applicant by ID\r\napp.delete(\"/applicants/:id\", async (req, res) => {\r\n    const applicantId = req.params.id;\r\n    try {\r\n        const deletedApplicant = await ApplicantModel.findByIdAndDelete(applicantId);\r\n        if (!deletedApplicant) {\r\n            return res.status(404).send(\"Applicant not found\");\r\n        }\r\n        res.status(200).send(\"Applicant deleted successfully\");\r\n    } catch (err) {\r\n        console.error(err);\r\n        res.status(500).send(\"Error deleting applicant\");\r\n    }\r\n});\r\n\r\n// Start the server\r\nconst PORT = process.env.PORT || 5000;\r\napp.listen(PORT, () => {\r\n    console.log(`Server started on port ${PORT}`);\r\n});\r\n"],"mappings":"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"}},"mtime":1694704266019},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\\\\src\\\\Models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\",\"filename\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\\\\src\\\\Models\\\\Applicants.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.17:development":{"value":{"code":"const mongoose = require('mongoose');\n\n// Define the schema for the job applicant\nconst applicantSchema = new mongoose.Schema({\n  referenceNumber: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  nic: {\n    type: String,\n    required: true\n  },\n  emailAddress: {\n    type: String,\n    required: true\n  },\n  date: {\n    type: Date,\n    required: true\n  },\n  applicantDetails: {\n    highSchoolName: {\n      type: String,\n      required: true\n    },\n    city: {\n      type: String,\n      required: true\n    },\n    fromDate: {\n      type: Date,\n      required: true\n    },\n    toDate: {\n      type: Date,\n      required: true\n    },\n    graduate: {\n      type: Boolean,\n      required: true\n    }\n  },\n  position: {\n    type: String,\n    required: true\n  }\n});\n\n// Create a model for the job applicant using the schema\nconst ApplicantModel = mongoose.model('Applicant', applicantSchema);\nmodule.exports = ApplicantModel;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJhcHBsaWNhbnRTY2hlbWEiLCJTY2hlbWEiLCJyZWZlcmVuY2VOdW1iZXIiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ1bmlxdWUiLCJuYW1lIiwibmljIiwiZW1haWxBZGRyZXNzIiwiZGF0ZSIsIkRhdGUiLCJhcHBsaWNhbnREZXRhaWxzIiwiaGlnaFNjaG9vbE5hbWUiLCJjaXR5IiwiZnJvbURhdGUiLCJ0b0RhdGUiLCJncmFkdWF0ZSIsIkJvb2xlYW4iLCJwb3NpdGlvbiIsIkFwcGxpY2FudE1vZGVsIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcUHJvamVjdCByZWFjdFxcZW50ZXJwcmljZVByb1xcQmFja2VuZFxcc3JjXFxNb2RlbHNcXCIsInNvdXJjZXMiOlsiQXBwbGljYW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcblxyXG4vLyBEZWZpbmUgdGhlIHNjaGVtYSBmb3IgdGhlIGpvYiBhcHBsaWNhbnRcclxuY29uc3QgYXBwbGljYW50U2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICByZWZlcmVuY2VOdW1iZXI6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgdW5pcXVlOiB0cnVlXHJcbiAgICB9LFxyXG4gICAgbmFtZToge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgfSxcclxuICAgIG5pYzoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgfSxcclxuICAgIGVtYWlsQWRkcmVzczoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgfSxcclxuICAgIGRhdGU6IHtcclxuICAgICAgICB0eXBlOiBEYXRlLFxyXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICB9LFxyXG4gICAgYXBwbGljYW50RGV0YWlsczoge1xyXG4gICAgICAgIGhpZ2hTY2hvb2xOYW1lOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNpdHk6IHtcclxuICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZnJvbURhdGU6IHtcclxuICAgICAgICAgICAgdHlwZTogRGF0ZSxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIHRvRGF0ZToge1xyXG4gICAgICAgICAgICB0eXBlOiBEYXRlLFxyXG4gICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ3JhZHVhdGU6IHtcclxuICAgICAgICAgICAgdHlwZTogQm9vbGVhbixcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgcG9zaXRpb246IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgIH1cclxufSk7XHJcblxyXG4vLyBDcmVhdGUgYSBtb2RlbCBmb3IgdGhlIGpvYiBhcHBsaWNhbnQgdXNpbmcgdGhlIHNjaGVtYVxyXG5jb25zdCBBcHBsaWNhbnRNb2RlbCA9IG1vbmdvb3NlLm1vZGVsKCdBcHBsaWNhbnQnLCBhcHBsaWNhbnRTY2hlbWEpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBBcHBsaWNhbnRNb2RlbDtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFVLENBQUM7O0FBRXBDO0FBQ0EsTUFBTUMsZUFBZSxHQUFHLElBQUlGLFFBQVEsQ0FBQ0csTUFBTSxDQUFDO0VBQ3hDQyxlQUFlLEVBQUU7SUFDYkMsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRSxJQUFJO0lBQ2RDLE1BQU0sRUFBRTtFQUNaLENBQUM7RUFDREMsSUFBSSxFQUFFO0lBQ0ZKLElBQUksRUFBRUMsTUFBTTtJQUNaQyxRQUFRLEVBQUU7RUFDZCxDQUFDO0VBQ0RHLEdBQUcsRUFBRTtJQUNETCxJQUFJLEVBQUVDLE1BQU07SUFDWkMsUUFBUSxFQUFFO0VBQ2QsQ0FBQztFQUNESSxZQUFZLEVBQUU7SUFDVk4sSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRTtFQUNkLENBQUM7RUFDREssSUFBSSxFQUFFO0lBQ0ZQLElBQUksRUFBRVEsSUFBSTtJQUNWTixRQUFRLEVBQUU7RUFDZCxDQUFDO0VBQ0RPLGdCQUFnQixFQUFFO0lBQ2RDLGNBQWMsRUFBRTtNQUNaVixJQUFJLEVBQUVDLE1BQU07TUFDWkMsUUFBUSxFQUFFO0lBQ2QsQ0FBQztJQUNEUyxJQUFJLEVBQUU7TUFDRlgsSUFBSSxFQUFFQyxNQUFNO01BQ1pDLFFBQVEsRUFBRTtJQUNkLENBQUM7SUFDRFUsUUFBUSxFQUFFO01BQ05aLElBQUksRUFBRVEsSUFBSTtNQUNWTixRQUFRLEVBQUU7SUFDZCxDQUFDO0lBQ0RXLE1BQU0sRUFBRTtNQUNKYixJQUFJLEVBQUVRLElBQUk7TUFDVk4sUUFBUSxFQUFFO0lBQ2QsQ0FBQztJQUNEWSxRQUFRLEVBQUU7TUFDTmQsSUFBSSxFQUFFZSxPQUFPO01BQ2JiLFFBQVEsRUFBRTtJQUNkO0VBQ0osQ0FBQztFQUNEYyxRQUFRLEVBQUU7SUFDTmhCLElBQUksRUFBRUMsTUFBTTtJQUNaQyxRQUFRLEVBQUU7RUFDZDtBQUNKLENBQUMsQ0FBQzs7QUFFRjtBQUNBLE1BQU1lLGNBQWMsR0FBR3RCLFFBQVEsQ0FBQ3VCLEtBQUssQ0FBQyxXQUFXLEVBQUVyQixlQUFlLENBQUM7QUFFbkVzQixNQUFNLENBQUNDLE9BQU8sR0FBR0gsY0FBYyJ9","map":{"version":3,"names":["mongoose","require","applicantSchema","Schema","referenceNumber","type","String","required","unique","name","nic","emailAddress","date","Date","applicantDetails","highSchoolName","city","fromDate","toDate","graduate","Boolean","position","ApplicantModel","model","module","exports"],"sourceRoot":"C:\\Project react\\enterpricePro\\Backend\\src\\Models\\","sources":["Applicants.js"],"sourcesContent":["const mongoose = require('mongoose');\r\n\r\n// Define the schema for the job applicant\r\nconst applicantSchema = new mongoose.Schema({\r\n    referenceNumber: {\r\n        type: String,\r\n        required: true,\r\n        unique: true\r\n    },\r\n    name: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    nic: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    emailAddress: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    date: {\r\n        type: Date,\r\n        required: true\r\n    },\r\n    applicantDetails: {\r\n        highSchoolName: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        city: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        fromDate: {\r\n            type: Date,\r\n            required: true\r\n        },\r\n        toDate: {\r\n            type: Date,\r\n            required: true\r\n        },\r\n        graduate: {\r\n            type: Boolean,\r\n            required: true\r\n        }\r\n    },\r\n    position: {\r\n        type: String,\r\n        required: true\r\n    }\r\n});\r\n\r\n// Create a model for the job applicant using the schema\r\nconst ApplicantModel = mongoose.model('Applicant', applicantSchema);\r\n\r\nmodule.exports = ApplicantModel;\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;;AAEpC;AACA,MAAMC,eAAe,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACxCC,eAAe,EAAE;IACbC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE;EACZ,CAAC;EACDC,IAAI,EAAE;IACFJ,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACd,CAAC;EACDG,GAAG,EAAE;IACDL,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACd,CAAC;EACDI,YAAY,EAAE;IACVN,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACd,CAAC;EACDK,IAAI,EAAE;IACFP,IAAI,EAAEQ,IAAI;IACVN,QAAQ,EAAE;EACd,CAAC;EACDO,gBAAgB,EAAE;IACdC,cAAc,EAAE;MACZV,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd,CAAC;IACDS,IAAI,EAAE;MACFX,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd,CAAC;IACDU,QAAQ,EAAE;MACNZ,IAAI,EAAEQ,IAAI;MACVN,QAAQ,EAAE;IACd,CAAC;IACDW,MAAM,EAAE;MACJb,IAAI,EAAEQ,IAAI;MACVN,QAAQ,EAAE;IACd,CAAC;IACDY,QAAQ,EAAE;MACNd,IAAI,EAAEe,OAAO;MACbb,QAAQ,EAAE;IACd;EACJ,CAAC;EACDc,QAAQ,EAAE;IACNhB,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMe,cAAc,GAAGtB,QAAQ,CAACuB,KAAK,CAAC,WAAW,EAAErB,eAAe,CAAC;AAEnEsB,MAAM,CAACC,OAAO,GAAGH,cAAc"}},"mtime":1694678060956},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\\\\src\\\\Models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\",\"filename\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\\\\src\\\\Models\\\\ApplicantModel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Project react\\\\enterpricePro\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.17:development":{"value":{"code":"const mongoose = require(\"mongoose\");\nconst shortid = require(\"shortid\");\n\n// Define the schema for the job applicant\nconst applicantSchema = new mongoose.Schema({\n  referenceNumber: {\n    type: String,\n    default: shortid.generate,\n    // Generate a unique reference number\n    unique: true // Ensure uniqueness\n  },\n\n  userId: {\n    type: 'string'\n  },\n  name: {\n    type: String,\n    required: true // Add required field for name\n  },\n\n  address: {\n    type: String\n    // required: true, // Add required field for address\n  },\n\n  nic: {\n    type: String\n    // required: true, // Add required field for nic\n  },\n\n  emailAddress: {\n    type: String\n    // required: true, // Add required field for emailAddress\n  },\n\n  date: {\n    type: Date\n    // required: true, // Add required field for date\n  },\n\n  applicantDetails: {\n    highSchoolName: {\n      type: String\n      // required: true, // Add required field for highSchoolName\n    },\n\n    city: {\n      type: String\n      // required: true, // Add required field for city\n    },\n\n    fromDate: {\n      type: Date\n      // required: true, // Add required field for fromDate\n    },\n\n    toDate: {\n      type: Date\n      // required: true, // Add required field for toDate\n    },\n\n    graduate: {\n      type: Boolean\n      // required: true, // Add required field for graduate\n    },\n\n    graduateExplanation: {\n      type: String\n    },\n    authorized: {\n      type: Boolean\n      // required: true, // Add required field for authorized\n    },\n\n    convicted: {\n      type: Boolean\n      // required: true, // Add required field for convicted\n    }\n  },\n\n  position: {\n    type: String\n    // required: true,\n  },\n\n  Diploma: {\n    type: String\n  },\n  cv: {\n    type: String // You can store the file path or reference here\n  }\n});\n\n// Create a model for the job applicant using the schema\nconst ApplicantModel = mongoose.model(\"Applicant\", applicantSchema);\nmodule.exports = ApplicantModel;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJzaG9ydGlkIiwiYXBwbGljYW50U2NoZW1hIiwiU2NoZW1hIiwicmVmZXJlbmNlTnVtYmVyIiwidHlwZSIsIlN0cmluZyIsImRlZmF1bHQiLCJnZW5lcmF0ZSIsInVuaXF1ZSIsInVzZXJJZCIsIm5hbWUiLCJyZXF1aXJlZCIsImFkZHJlc3MiLCJuaWMiLCJlbWFpbEFkZHJlc3MiLCJkYXRlIiwiRGF0ZSIsImFwcGxpY2FudERldGFpbHMiLCJoaWdoU2Nob29sTmFtZSIsImNpdHkiLCJmcm9tRGF0ZSIsInRvRGF0ZSIsImdyYWR1YXRlIiwiQm9vbGVhbiIsImdyYWR1YXRlRXhwbGFuYXRpb24iLCJhdXRob3JpemVkIiwiY29udmljdGVkIiwicG9zaXRpb24iLCJEaXBsb21hIiwiY3YiLCJBcHBsaWNhbnRNb2RlbCIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiQzpcXFByb2plY3QgcmVhY3RcXGVudGVycHJpY2VQcm9cXEJhY2tlbmRcXHNyY1xcTW9kZWxzXFwiLCJzb3VyY2VzIjpbIkFwcGxpY2FudE1vZGVsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xyXG5jb25zdCBzaG9ydGlkID0gcmVxdWlyZShcInNob3J0aWRcIik7XHJcblxyXG4vLyBEZWZpbmUgdGhlIHNjaGVtYSBmb3IgdGhlIGpvYiBhcHBsaWNhbnRcclxuY29uc3QgYXBwbGljYW50U2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICByZWZlcmVuY2VOdW1iZXI6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgZGVmYXVsdDogc2hvcnRpZC5nZW5lcmF0ZSwgLy8gR2VuZXJhdGUgYSB1bmlxdWUgcmVmZXJlbmNlIG51bWJlclxyXG4gICAgICAgIHVuaXF1ZTogdHJ1ZSwgLy8gRW5zdXJlIHVuaXF1ZW5lc3NcclxuICAgIH0sXHJcbiAgICB1c2VySWQ6IHtcclxuICAgICAgICB0eXBlOiAnc3RyaW5nJyxcclxuICAgIH0sXHJcbiAgICBuYW1lOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLCAvLyBBZGQgcmVxdWlyZWQgZmllbGQgZm9yIG5hbWVcclxuICAgIH0sXHJcbiAgICBhZGRyZXNzOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIC8vIHJlcXVpcmVkOiB0cnVlLCAvLyBBZGQgcmVxdWlyZWQgZmllbGQgZm9yIGFkZHJlc3NcclxuICAgIH0sXHJcbiAgICBuaWM6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgLy8gcmVxdWlyZWQ6IHRydWUsIC8vIEFkZCByZXF1aXJlZCBmaWVsZCBmb3IgbmljXHJcbiAgICB9LFxyXG4gICAgZW1haWxBZGRyZXNzOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIC8vIHJlcXVpcmVkOiB0cnVlLCAvLyBBZGQgcmVxdWlyZWQgZmllbGQgZm9yIGVtYWlsQWRkcmVzc1xyXG4gICAgfSxcclxuICAgIGRhdGU6IHtcclxuICAgICAgICB0eXBlOiBEYXRlLFxyXG4gICAgICAgIC8vIHJlcXVpcmVkOiB0cnVlLCAvLyBBZGQgcmVxdWlyZWQgZmllbGQgZm9yIGRhdGVcclxuICAgIH0sXHJcbiAgICBhcHBsaWNhbnREZXRhaWxzOiB7XHJcbiAgICAgICAgaGlnaFNjaG9vbE5hbWU6IHtcclxuICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgICAgICAvLyByZXF1aXJlZDogdHJ1ZSwgLy8gQWRkIHJlcXVpcmVkIGZpZWxkIGZvciBoaWdoU2Nob29sTmFtZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2l0eToge1xyXG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgICAgIC8vIHJlcXVpcmVkOiB0cnVlLCAvLyBBZGQgcmVxdWlyZWQgZmllbGQgZm9yIGNpdHlcclxuICAgICAgICB9LFxyXG4gICAgICAgIGZyb21EYXRlOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IERhdGUsXHJcbiAgICAgICAgICAgIC8vIHJlcXVpcmVkOiB0cnVlLCAvLyBBZGQgcmVxdWlyZWQgZmllbGQgZm9yIGZyb21EYXRlXHJcbiAgICAgICAgfSxcclxuICAgICAgICB0b0RhdGU6IHtcclxuICAgICAgICAgICAgdHlwZTogRGF0ZSxcclxuICAgICAgICAgICAgLy8gcmVxdWlyZWQ6IHRydWUsIC8vIEFkZCByZXF1aXJlZCBmaWVsZCBmb3IgdG9EYXRlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBncmFkdWF0ZToge1xyXG4gICAgICAgICAgICB0eXBlOiBCb29sZWFuLFxyXG4gICAgICAgICAgICAvLyByZXF1aXJlZDogdHJ1ZSwgLy8gQWRkIHJlcXVpcmVkIGZpZWxkIGZvciBncmFkdWF0ZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ3JhZHVhdGVFeHBsYW5hdGlvbjoge1xyXG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBhdXRob3JpemVkOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXHJcbiAgICAgICAgICAgIC8vIHJlcXVpcmVkOiB0cnVlLCAvLyBBZGQgcmVxdWlyZWQgZmllbGQgZm9yIGF1dGhvcml6ZWRcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbnZpY3RlZDoge1xyXG4gICAgICAgICAgICB0eXBlOiBCb29sZWFuLFxyXG4gICAgICAgICAgICAvLyByZXF1aXJlZDogdHJ1ZSwgLy8gQWRkIHJlcXVpcmVkIGZpZWxkIGZvciBjb252aWN0ZWRcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIHBvc2l0aW9uOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIC8vIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgfSxcclxuICAgIERpcGxvbWE6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICB9LFxyXG4gICAgY3Y6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsIC8vIFlvdSBjYW4gc3RvcmUgdGhlIGZpbGUgcGF0aCBvciByZWZlcmVuY2UgaGVyZVxyXG4gICAgfSxcclxufSk7XHJcblxyXG4vLyBDcmVhdGUgYSBtb2RlbCBmb3IgdGhlIGpvYiBhcHBsaWNhbnQgdXNpbmcgdGhlIHNjaGVtYVxyXG5jb25zdCBBcHBsaWNhbnRNb2RlbCA9IG1vbmdvb3NlLm1vZGVsKFwiQXBwbGljYW50XCIsIGFwcGxpY2FudFNjaGVtYSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEFwcGxpY2FudE1vZGVsO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQVUsQ0FBQztBQUNwQyxNQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFTLENBQUM7O0FBRWxDO0FBQ0EsTUFBTUUsZUFBZSxHQUFHLElBQUlILFFBQVEsQ0FBQ0ksTUFBTSxDQUFDO0VBQ3hDQyxlQUFlLEVBQUU7SUFDYkMsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLE9BQU8sRUFBRU4sT0FBTyxDQUFDTyxRQUFRO0lBQUU7SUFDM0JDLE1BQU0sRUFBRSxJQUFJLENBQUU7RUFDbEIsQ0FBQzs7RUFDREMsTUFBTSxFQUFFO0lBQ0pMLElBQUksRUFBRTtFQUNWLENBQUM7RUFDRE0sSUFBSSxFQUFFO0lBQ0ZOLElBQUksRUFBRUMsTUFBTTtJQUNaTSxRQUFRLEVBQUUsSUFBSSxDQUFFO0VBQ3BCLENBQUM7O0VBQ0RDLE9BQU8sRUFBRTtJQUNMUixJQUFJLEVBQUVDO0lBQ047RUFDSixDQUFDOztFQUNEUSxHQUFHLEVBQUU7SUFDRFQsSUFBSSxFQUFFQztJQUNOO0VBQ0osQ0FBQzs7RUFDRFMsWUFBWSxFQUFFO0lBQ1ZWLElBQUksRUFBRUM7SUFDTjtFQUNKLENBQUM7O0VBQ0RVLElBQUksRUFBRTtJQUNGWCxJQUFJLEVBQUVZO0lBQ047RUFDSixDQUFDOztFQUNEQyxnQkFBZ0IsRUFBRTtJQUNkQyxjQUFjLEVBQUU7TUFDWmQsSUFBSSxFQUFFQztNQUNOO0lBQ0osQ0FBQzs7SUFDRGMsSUFBSSxFQUFFO01BQ0ZmLElBQUksRUFBRUM7TUFDTjtJQUNKLENBQUM7O0lBQ0RlLFFBQVEsRUFBRTtNQUNOaEIsSUFBSSxFQUFFWTtNQUNOO0lBQ0osQ0FBQzs7SUFDREssTUFBTSxFQUFFO01BQ0pqQixJQUFJLEVBQUVZO01BQ047SUFDSixDQUFDOztJQUNETSxRQUFRLEVBQUU7TUFDTmxCLElBQUksRUFBRW1CO01BQ047SUFDSixDQUFDOztJQUNEQyxtQkFBbUIsRUFBRTtNQUNqQnBCLElBQUksRUFBRUM7SUFDVixDQUFDO0lBQ0RvQixVQUFVLEVBQUU7TUFDUnJCLElBQUksRUFBRW1CO01BQ047SUFDSixDQUFDOztJQUNERyxTQUFTLEVBQUU7TUFDUHRCLElBQUksRUFBRW1CO01BQ047SUFDSjtFQUNKLENBQUM7O0VBQ0RJLFFBQVEsRUFBRTtJQUNOdkIsSUFBSSxFQUFFQztJQUNOO0VBQ0osQ0FBQzs7RUFDRHVCLE9BQU8sRUFBRTtJQUNMeEIsSUFBSSxFQUFFQztFQUNWLENBQUM7RUFDRHdCLEVBQUUsRUFBRTtJQUNBekIsSUFBSSxFQUFFQyxNQUFNLENBQUU7RUFDbEI7QUFDSixDQUFDLENBQUM7O0FBRUY7QUFDQSxNQUFNeUIsY0FBYyxHQUFHaEMsUUFBUSxDQUFDaUMsS0FBSyxDQUFDLFdBQVcsRUFBRTlCLGVBQWUsQ0FBQztBQUVuRStCLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHSCxjQUFjIn0=","map":{"version":3,"names":["mongoose","require","shortid","applicantSchema","Schema","referenceNumber","type","String","default","generate","unique","userId","name","required","address","nic","emailAddress","date","Date","applicantDetails","highSchoolName","city","fromDate","toDate","graduate","Boolean","graduateExplanation","authorized","convicted","position","Diploma","cv","ApplicantModel","model","module","exports"],"sourceRoot":"C:\\Project react\\enterpricePro\\Backend\\src\\Models\\","sources":["ApplicantModel.js"],"sourcesContent":["const mongoose = require(\"mongoose\");\r\nconst shortid = require(\"shortid\");\r\n\r\n// Define the schema for the job applicant\r\nconst applicantSchema = new mongoose.Schema({\r\n    referenceNumber: {\r\n        type: String,\r\n        default: shortid.generate, // Generate a unique reference number\r\n        unique: true, // Ensure uniqueness\r\n    },\r\n    userId: {\r\n        type: 'string',\r\n    },\r\n    name: {\r\n        type: String,\r\n        required: true, // Add required field for name\r\n    },\r\n    address: {\r\n        type: String,\r\n        // required: true, // Add required field for address\r\n    },\r\n    nic: {\r\n        type: String,\r\n        // required: true, // Add required field for nic\r\n    },\r\n    emailAddress: {\r\n        type: String,\r\n        // required: true, // Add required field for emailAddress\r\n    },\r\n    date: {\r\n        type: Date,\r\n        // required: true, // Add required field for date\r\n    },\r\n    applicantDetails: {\r\n        highSchoolName: {\r\n            type: String,\r\n            // required: true, // Add required field for highSchoolName\r\n        },\r\n        city: {\r\n            type: String,\r\n            // required: true, // Add required field for city\r\n        },\r\n        fromDate: {\r\n            type: Date,\r\n            // required: true, // Add required field for fromDate\r\n        },\r\n        toDate: {\r\n            type: Date,\r\n            // required: true, // Add required field for toDate\r\n        },\r\n        graduate: {\r\n            type: Boolean,\r\n            // required: true, // Add required field for graduate\r\n        },\r\n        graduateExplanation: {\r\n            type: String,\r\n        },\r\n        authorized: {\r\n            type: Boolean,\r\n            // required: true, // Add required field for authorized\r\n        },\r\n        convicted: {\r\n            type: Boolean,\r\n            // required: true, // Add required field for convicted\r\n        },\r\n    },\r\n    position: {\r\n        type: String,\r\n        // required: true,\r\n    },\r\n    Diploma: {\r\n        type: String,\r\n    },\r\n    cv: {\r\n        type: String, // You can store the file path or reference here\r\n    },\r\n});\r\n\r\n// Create a model for the job applicant using the schema\r\nconst ApplicantModel = mongoose.model(\"Applicant\", applicantSchema);\r\n\r\nmodule.exports = ApplicantModel;\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;;AAElC;AACA,MAAME,eAAe,GAAG,IAAIH,QAAQ,CAACI,MAAM,CAAC;EACxCC,eAAe,EAAE;IACbC,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAEN,OAAO,CAACO,QAAQ;IAAE;IAC3BC,MAAM,EAAE,IAAI,CAAE;EAClB,CAAC;;EACDC,MAAM,EAAE;IACJL,IAAI,EAAE;EACV,CAAC;EACDM,IAAI,EAAE;IACFN,IAAI,EAAEC,MAAM;IACZM,QAAQ,EAAE,IAAI,CAAE;EACpB,CAAC;;EACDC,OAAO,EAAE;IACLR,IAAI,EAAEC;IACN;EACJ,CAAC;;EACDQ,GAAG,EAAE;IACDT,IAAI,EAAEC;IACN;EACJ,CAAC;;EACDS,YAAY,EAAE;IACVV,IAAI,EAAEC;IACN;EACJ,CAAC;;EACDU,IAAI,EAAE;IACFX,IAAI,EAAEY;IACN;EACJ,CAAC;;EACDC,gBAAgB,EAAE;IACdC,cAAc,EAAE;MACZd,IAAI,EAAEC;MACN;IACJ,CAAC;;IACDc,IAAI,EAAE;MACFf,IAAI,EAAEC;MACN;IACJ,CAAC;;IACDe,QAAQ,EAAE;MACNhB,IAAI,EAAEY;MACN;IACJ,CAAC;;IACDK,MAAM,EAAE;MACJjB,IAAI,EAAEY;MACN;IACJ,CAAC;;IACDM,QAAQ,EAAE;MACNlB,IAAI,EAAEmB;MACN;IACJ,CAAC;;IACDC,mBAAmB,EAAE;MACjBpB,IAAI,EAAEC;IACV,CAAC;IACDoB,UAAU,EAAE;MACRrB,IAAI,EAAEmB;MACN;IACJ,CAAC;;IACDG,SAAS,EAAE;MACPtB,IAAI,EAAEmB;MACN;IACJ;EACJ,CAAC;;EACDI,QAAQ,EAAE;IACNvB,IAAI,EAAEC;IACN;EACJ,CAAC;;EACDuB,OAAO,EAAE;IACLxB,IAAI,EAAEC;EACV,CAAC;EACDwB,EAAE,EAAE;IACAzB,IAAI,EAAEC,MAAM,CAAE;EAClB;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMyB,cAAc,GAAGhC,QAAQ,CAACiC,KAAK,CAAC,WAAW,EAAE9B,eAAe,CAAC;AAEnE+B,MAAM,CAACC,OAAO,GAAGH,cAAc"}},"mtime":1694703632647}}